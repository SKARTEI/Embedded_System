/*#include <mega128.h>
#include <delay.h>
flash unsigned char seg_pat[10]= {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F};
void seg_calculate(int x);

void main(void)
{
    unsigned int num = 0;
    DDRB = 0xFF;
    DDRF = 0xF0;
    
    while(1)
    {
        seg_calculate(num);
        num++;
        delay_ms(100);
        if(num >9999)
            num = 0;  
    }
}

void seg_calculate(int x)
{
    int thou,hund,ten,one, p, pp, i;
    
    thou = x / (1000);
    p = x % (1000);
    
    hund = p / (100);
    pp = p % (100);
    
    ten = pp / (10);
    one = pp % (10);
            
    
    for(i = 0; i < 2 ; i++) {
    PORTF = 0b11100000;
    PORTB = seg_pat[one];
    delay_ms(5);     
    
    PORTF = 0b11010000;
    PORTB = seg_pat[ten];
    delay_ms(5);    
    
    PORTF = 0b10110000;
    PORTB = seg_pat[hund];
    delay_ms(5);     
    
    PORTF = 0b01110000;
    PORTB = seg_pat[thou];  
    delay_ms(5);   
    }
}*/

#include <mega128.h>
#include <delay.h>
flash unsigned char seg_pat[10]= {0x3f, 0x06, 0x5b, 0x4f, 0x66, 
0x6d, 0x7d, 0x07, 0x7f, 0x6f};
void Seg4_out(int); // 네 자리 정수 출력
void main(void)
{ 
int num = 0;
DDRB = 0xFF; // 포트 B 출력 방향 설정
DDRF = 0xF0; // 포트 F 상위 4비트 출력 방향 설정
while(1){ 
Seg4_out(num);
num++;
if(num > 9999) num = 0;
}
} 

void Seg4_out(int num)
{ 
int i, N1000, N100, N10, N1, buf;
N1000 = num / 1000; // 1000자리 추출
buf = num % 1000;
N100 = buf / 100; // 100자리 추출
buf = buf % 100; 
N10 = buf / 10; // 10자리 추출
N1 = buf % 10; // 1자리 추출
for(i = 0;i < 2;i++){ 
PORTF = 0b11100000; // 맨 우측 7-Segment ON (PF4=0) 
PORTB = seg_pat[N1]; // 1자리 표시
delay_ms(5); 
PORTF = 0b11010000; // 우측 2th 7-Segment ON (PF5=0) 
PORTB = seg_pat[N10]; // 10자리 표시
delay_ms(5);
PORTF = 0b10110000; // 좌측 2th 7-Segment ON (PF6=0) 
PORTB = seg_pat[N100]; // 100자리 표시
delay_ms(5);
PORTF = 0b01110000; // 맨 좌측 7-Segment ON (PF7=0) 
PORTB = seg_pat[N1000]; // 1000자리 표시
delay_ms(5);
}
}
