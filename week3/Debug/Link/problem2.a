;#include <mega128.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;flash unsigned char seg_pat[16]= {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F, 0x77, 0x7C, 0x39, 0x5E, 0x ...
;
;
;void main(void)
; 0000 0007 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0008     unsigned int SEG2_output, SEG1_output;
; 0000 0009     unsigned char stay_sw1, push_sw1, stay_sw2, push_sw2, led_output;
; 0000 000A     unsigned char led = 0x49;
; 0000 000B 
; 0000 000C     DDRB = 0xFF;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;	SEG2_output -> R16,R17
;	SEG1_output -> R18,R19
;	stay_sw1 -> R21
;	push_sw1 -> R20
;	stay_sw2 -> Y+3
;	push_sw2 -> Y+2
;	led_output -> Y+1
;	led -> Y+0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 000D     DDRF = 0xF0;
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 000E 
; 0000 000F     SEG2_output = led / 16;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0010     SEG1_output = led % 16;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0011 
; 0000 0012     DDRC = 0xFF;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0013     DDRE = 0x0;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0014 
; 0000 0015     led_output = led ^ 0b11111111;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0016     PORTC = led_output;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0017 
; 0000 0018     stay_sw1 = PINE & 0b00010000;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0019     stay_sw2 = PINE & 0b00100000;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 001A 
; 0000 001B     while(1)
;PCODE: $0000002F VOL: 0
; 0000 001C     {
; 0000 001D        push_sw1 = PINE & 0b00010000;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 001E        push_sw2 = PINE & 0b00100000;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 001F 
; 0000 0020        PORTF = 0b11100000;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0021        PORTB = seg_pat[SEG1_output];
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0022        delay_ms(5);
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0023        PORTF = 0b11010000;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0024        PORTB = seg_pat[SEG2_output];
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0025        delay_ms(5);
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 0026 
; 0000 0027        if((stay_sw1 != 0) && (push_sw1 == 0))
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0028         {
; 0000 0029             led++;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 002A             SEG2_output = led / 16;
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 002B             SEG1_output = led % 16;
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 002C             led_output = led ^ 0b11111111;
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 002D             PORTC = led_output;
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 002E         }
; 0000 002F         else if((stay_sw2 != 0) && (push_sw2 == 0))
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 0030         {
; 0000 0031             led--;
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 0032             SEG2_output = led / 16;
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 0033             SEG1_output = led % 16;
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 0034             led_output = led ^ 0b11111111;
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 0035             PORTC = led_output;
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 0036         }
; 0000 0037         stay_sw1 = push_sw1;
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 0038         stay_sw2 = push_sw2;
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 0039     }
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 003A }
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;
