;#include <mega128.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;flash unsigned char seg_pat[11]= {0x3f, 0x06, 0x5b, 0x4f, 0x66, 0x6d, 0x7d, 0x07, 0x7f, 0x6f, 0x77};
;flash unsigned char seg_end[3] = {0x79, 0x54,0x5E};
;unsigned int num = 120,one, ten, hund, pit = 0, next = 2;

	.DSEG
;unsigned char led = 0xFF;
;unsigned int  timer_count = 0, light_count;
;
;void SEG_output(void);
;void SEG_end2(void);
;void led_output(void);
;
;void main(void)
; 0000 000E {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 000F     DDRB = 0xFF;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 0010     DDRF = 0xF0;
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0011     DDRC = 0xFF;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0012 
; 0000 0013     EIMSK = 0b00010000;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0014     EICRB = 0b00000010;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0015 
; 0000 0016     TIMSK = 0x01;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0017     TCCR0 = 0x04; //  1/16us * 64 *(256-6) = 1ms
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0018     TCNT0 = 6;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0019 
; 0000 001A     SREG = 0x80;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 001B     light_count = num / 8;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 001C 
; 0000 001D     while(1)
;PCODE: $00000023 VOL: 0
; 0000 001E     {
; 0000 001F         SEG_output();
;PCODE: $00000024 VOL: 0
; 0000 0020         led_output();
;PCODE: $00000025 VOL: 0
; 0000 0021     }
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0022 }
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;
;void SEG_output(void)
; 0000 0025 {
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0026     hund = num / 100;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0027     pit = num % 100;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0028     ten = pit / 10;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0029     one = pit % 10;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 002A     num = (100*hund) + (10*ten) + one;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 002B 
; 0000 002C     PORTF = 0b11100000;
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 002D     PORTB = seg_pat[one];
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 002E     delay_ms(5);
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 002F 
; 0000 0030     PORTF = 0b11010000;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0031     PORTB = seg_pat[ten];
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0032     delay_ms(5);
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 0033 
; 0000 0034     PORTF = 0b10110000;
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 0035     PORTB = seg_pat[hund];
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 0036     delay_ms(5);
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 0037 
; 0000 0038     PORTF = 0b01110000;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 0039     PORTB = seg_pat[next];
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 003A     delay_ms(5);
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 003B }
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;
;void SEG_end2(void)
; 0000 003E {
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 003F     int ii = 0;
; 0000 0040     for(ii = 0; ii < 2 ; ii++)
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;	ii -> R16,R17
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 0041     {
; 0000 0042         int i = 0;
; 0000 0043         for(i = 1 ; i <= 200; i++)
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;	i -> Y+0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 0044         {
; 0000 0045             PORTF = 0b10110000;
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 0046             PORTB = seg_end[0];
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0000 0047             delay_ms(5);
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 0048 
; 0000 0049             PORTF = 0b11010000;
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 004A             PORTB = seg_end[1];
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 004B             delay_ms(5);
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 004C 
; 0000 004D             PORTF = 0b11100000;
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 004E             PORTB = seg_end[2];
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0000 004F             delay_ms(5);
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 0050 
; 0000 0051             PORTC = 0xFF;
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 0052         }
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 0053     }
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
; 0000 0054     one = 0;
;PCODE: $000000B3 VOL: 0
; 0000 0055     ten = 0;
;PCODE: $000000B4 VOL: 0
; 0000 0056     hund = 0;
;PCODE: $000000B5 VOL: 0
; 0000 0057 }
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;
;void led_output(void)
; 0000 005A {
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 005B     if(num <= (1*light_count))
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0000 005C             led = 0b10000000;
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
; 0000 005D         else if (num <= (2*light_count))
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
; 0000 005E             led = 0b11000000;
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
; 0000 005F         else if (num <= (3*light_count))
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
; 0000 0060             led = 0b11100000;
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
; 0000 0061         else if (num <= (4*light_count))
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
; 0000 0062             led = 0b11110000;
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
; 0000 0063         else if (num <= (5*light_count))
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
; 0000 0064             led = 0b11111000;
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
; 0000 0065         else if (num <= (6*light_count))
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
; 0000 0066             led = 0b11111100;
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
; 0000 0067         else if (num <= (7*light_count))
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
; 0000 0068             led = 0b11111110;
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
; 0000 0069         else
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
; 0000 006A             led = 0b11111111;
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
; 0000 006B 
; 0000 006C     PORTC = led ^ 0b11111111;
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
; 0000 006D }
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;
;interrupt [EXT_INT4] void sw1_on (void)
; 0000 0070 {
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
; 0000 0071     if(next == 10)
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
; 0000 0072         next = 2;
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
; 0000 0073      else
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
; 0000 0074         next = next +2;
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
; 0000 0075 
; 0000 0076     switch (next)
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
; 0000 0077            {
; 0000 0078            case 2 :
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
; 0000 0079            num = 120;
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
; 0000 007A            light_count = num / 8;
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
; 0000 007B            break;
;PCODE: $0000011E VOL: 0
; 0000 007C            case 4:
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
; 0000 007D            num = 240;
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
; 0000 007E            light_count = num / 8;
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
; 0000 007F            break;
;PCODE: $00000127 VOL: 0
; 0000 0080            case 6:
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
; 0000 0081            num = 360;
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
; 0000 0082            light_count = num / 8;
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
; 0000 0083            break;
;PCODE: $00000130 VOL: 0
; 0000 0084            case 8:
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
; 0000 0085            num = 480;
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
; 0000 0086            light_count = num / 8;
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
; 0000 0087            break;
;PCODE: $00000139 VOL: 0
; 0000 0088            case 10:
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
; 0000 0089            num = 600;
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
; 0000 008A            light_count = num / 8;
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
; 0000 008B            break;
;PCODE: $00000142 VOL: 0
; 0000 008C            }
;PCODE: $00000143 VOL: 0
; 0000 008D }
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;
;interrupt [TIM0_OVF] void time0 (void)
; 0000 0090 {
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
; 0000 0091     TCNT0 = 6;
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
; 0000 0092     timer_count++;
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
; 0000 0093     if(timer_count == 1000)
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
; 0000 0094     {
; 0000 0095         timer_count = 0;
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
; 0000 0096         num--;
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
; 0000 0097     }
; 0000 0098 
; 0000 0099     if(num == 0)
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
; 0000 009A         SEG_end2();
;PCODE: $0000015A VOL: 0
; 0000 009B }
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
