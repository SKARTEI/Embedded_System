;#include <mega128.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;
;
;void LCD_IDLE();
;
;unsigned char R_num, S_num;
;void main(void)
; 0000 000A {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 000B     //unsigned char O_SW, N_SW;
; 0000 000C 
; 0000 000D     //DDRE = 0x0;
; 0000 000E 
; 0000 000F     DDRC = 0xFF;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 0010     PORTC = 0x0;
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0011 
; 0000 0012     UCSR1A = 0x0;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0013     UCSR1B = 0b10011000;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0014     UCSR1C = 0b00000110;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0015     UBRR1H = 0;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0016     UBRR1L = 103;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0017 
; 0000 0018     SREG = 0x80;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0019   /*
; 0000 001A    O_SW = PINE & 0b10000000;
; 0000 001B     while(1)
; 0000 001C     {
; 0000 001D         N_SW = PINE & 0b10000000;
; 0000 001E         if((O_SW != 0) && (N_SW == 0))
; 0000 001F         {
; 0000 0020             Command(LINE2);
; 0000 0021             LCD_String("CLEAR   LCD");
; 0000 0022             delay_ms(1000);
; 0000 0023             delay_ms(1000);
; 0000 0024             LCD_IDLE();
; 0000 0025         }
; 0000 0026 
; 0000 0027       O_SW = N_SW;
; 0000 0028     }  */
; 0000 0029     while(1);
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 002A }
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;
;
;
;interrupt [USART0_RXC] void USART_recieve (void)
; 0000 002F {
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0030     R_num = UDR1;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0031     S_num = R_num;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0032 
; 0000 0033     if(R_num == '1')
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0034     {
; 0000 0035         PORTC = 0b10000000;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0036         /*
; 0000 0037         Command(LINE2);
; 0000 0038         LCD_String("NUMBER 1 RECIEVED");
; 0000 0039         delay_ms(1000);
; 0000 003A         delay_ms(500);
; 0000 003B         LCD_IDLE();
; 0000 003C         */
; 0000 003D     }
; 0000 003E     else if(R_num == '2')
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 003F     {
; 0000 0040         PORTC = 0b01000000;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0041         /*
; 0000 0042         Command(LINE2);
; 0000 0043         LCD_String("NUMBER 2 RECIEVED");
; 0000 0044         delay_ms(1000);
; 0000 0045         delay_ms(500);
; 0000 0046         LCD_IDLE();
; 0000 0047         */
; 0000 0048     }
; 0000 0049     else
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 004A     {
; 0000 004B         PORTC = 0b00100000;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 004C     /*
; 0000 004D         Command(LINE2);
; 0000 004E         LCD_String("ERROR DETECTED");
; 0000 004F         delay_ms(1000);
; 0000 0050         delay_ms(500);
; 0000 0051         LCD_IDLE();
; 0000 0052         */
; 0000 0053     }
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0054     UDR1 = S_num;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0055 }
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
